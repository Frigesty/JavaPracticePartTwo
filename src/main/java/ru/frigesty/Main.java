package ru.frigesty;

public class Main{

    public static void main(String[] args) {

        Game witcher = new Game("The Witcher 3", "CD PROJEKT RED", true, 12);
        Game gtaV = new Game("Grand Theft Auto V", "Rockstar North", false,13);
        Game bg3 = new Game("Baldur's Gate 3", "Larian Studios", false,19);
        Game rust = new Game("Rust", "Facepunch Studios", false,11);
        Game rdr2 = new Game("Red Dead Redemption 2", "Rockstar North", false,23);
        Game cyberpunk = new Game("Cyberpunk 2077", "CD PROJEKT RED", true,25);

        ListImplementation list = new ListImplementation();
        System.out.println("Ниже представлена реализация в классе ListImplementation цикла `for` с коллекцией List.");
        System.out.println("Добавим несколько игр в List:");
        list.addGame(witcher);
        list.addGame(rdr2);
        list.addGame(witcher);
        list.addGame(gtaV);
        list.addGame(cyberpunk);
        list.addGame(gtaV);
        System.out.println("Выведем список игр.");
        list.printGames();
        System.out.println("Проверим есть ли игра `Grand Theft Auto V` есть в коллекции?");
        list.isGameInList(gtaV);
        System.out.println("Узнаем индекс игры `Cyberpunk 2077`.");
        list.printGameIndex(cyberpunk);
        System.out.println("Проверим есть ли игра `Rust` есть в коллекции?");
        list.isGameInList(rust);
        System.out.println("Теперь удалим игру The Witcher 3 из коллекции.");
        list.deleteGame(witcher);
        System.out.println("Выведем результат после удаления игры:");
        list.printGames();
        System.out.println("Изменим значение в индексе 3.");
        list.changeValueInIndex(3,bg3);
        System.out.println("Выведем результат после изменения:");
        list.printGames();
        System.out.println("Выведем игру по индексу 4.");
        list.printGameByIndex(4);
        System.out.println("Добавим значение в индекс 2.");
        list.addValueInIndex(2, rust);
        System.out.println("Выведем результат после добавления:");
        list.printGames();
        System.out.println(" ");

        MapImplementation map = new MapImplementation();
        System.out.println("Ниже представлена реализация в классе MapImplementation цикла `for each` с коллекцией Map.");
        System.out.println("Добавим несколько игр в Map:");
        map.addGame(witcher);
        map.addGame(rdr2);
        map.addGame(witcher);
        map.addGame(gtaV);
        map.addGame(cyberpunk);
        map.addGame(gtaV);
        System.out.println("Выведем список игр.");
        map.printGames();
        System.out.println("Проверим есть ли игра `Grand Theft Auto V` есть в коллекции?");
        map.findGame(gtaV);
        System.out.println("Узнаем ключ игры `Cyberpunk 2077`.");
        map.printKeyByGame(cyberpunk);
        System.out.println("Проверим есть ли игра `Rust` есть в коллекции?");
        map.findGame(rust);
        System.out.println("Теперь удалим игру The Witcher 3 из коллекции.");
        map.deleteGame(witcher);
        System.out.println("Выведем результат после удаления игры:");
        map.printGames();
        System.out.println("Изменим значение в ключе 3.");
        map.replaceGameByKey(3,bg3);
        System.out.println("Изменим значение в ключе 2.");
        map.replaceGameByKey(2,bg3);
        System.out.println("Выведем результат после изменения:");
        map.printGames();
        System.out.println("Выведем игру по ключу 4.");
        map.printGameByKey(4);
        System.out.println("Добавим значение в ключ 2.");
        map.addGameByKey(2, rust);
        System.out.println("Добавим значение в ключ 1.");
        map.addGameByKey(1, rust);
        System.out.println("Выведем результат после добавления:");
        map.printGames();
        System.out.println(" ");

        QueueImplementation queue = new QueueImplementation();
        System.out.println("Ниже представлена реализация в классе QueueImplementation цикла `do while` с коллекцией Queue.");
        System.out.println("Добавим несколько игр в Queue:");
        queue.addGame(witcher);
        queue.addGame(rdr2);
        queue.addGame(witcher);
        queue.addGame(gtaV);
        queue.addGame(cyberpunk);
        queue.addGame(gtaV);
        System.out.println("Выведем список игр.");
        queue.printGames();
        System.out.println("Проверим есть ли игра `Red Dead Redemption 2` есть в queue?");
        queue.findGame(rdr2);
        System.out.println("Теперь удалим пару игр из очереди.");
        queue.deleteGame();
        queue.deleteGame();
        System.out.println("Результат после удаления игр:");
        queue.printGames();
        System.out.println("Выведем первую игру в очереди");
        queue.printFirstGame();
        System.out.println("Выведем размер очереди");
        queue.printQueueSize();
        System.out.println(" ");

        SetImplementation set = new SetImplementation();
        System.out.println("Ниже представлена реализация в классе SetImplementation цикла `while` с коллекцией Set.");
        System.out.println("Добавим несколько игр в Set:");
        set.addGame(rust);
        set.addGame(rdr2);
        set.addGame(witcher);
        set.addGame(gtaV);
        set.addGame(cyberpunk);
        set.addGame(gtaV);
        System.out.println("Выведем список игр.");
        set.printGames();
        System.out.println("Удалим игру из списка");
        set.deleteGame(rdr2);
        System.out.println("Выведем список после удаления игры");
        set.printGames();
        System.out.println("Попробуем найти в списке игры Rust и Baldur's Gate 3");
        set.findGame(bg3);
        set.findGame(rust);
        System.out.println("Узнаем размер списка");
        set.printSetSize();
    }
}